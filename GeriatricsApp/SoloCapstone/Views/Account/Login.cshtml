@using SoloCapstone.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Laurens Care Geriatrics</title>
    <link rel="stylesheet" href="~/Content/Style.css" />
</head>
<body>
    <header>
        <div class="wrapper">
            <div class="logo">
                <img src="~/Images/LaurensCare.png" alt="pathing issue" />
            </div>
            <ul class="nav-area">
                <li>@Html.ActionLink("Home", "Index", "Home")</li>
                @if (User.IsInRole("Customer"))
                {
                    <li><a>@Html.ActionLink("Leave A Review", "WriteReview", "Customers")</a></li>
                    <li><a>@Html.ActionLink("Facilies", "FacilityReviews", "Customers")</a></li>
                    <li><a>@Html.ActionLink("Journal Entries", "CustomerJournals", "Customers")</a></li>
                }
                else if (User.IsInRole("Employee"))
                {
                    <li><a>@Html.ActionLink("Employee Home", "Index", "Employees")</a></li>
                    <li><a>@Html.ActionLink("Add Facility Review", "AddFacilityReview", "Employees")</a></li>
                }
                else
                {
                    <li><a>@Html.ActionLink("Register", "Register", "Account")</a></li>
                    <li><a>@Html.ActionLink("Login", "Login", "Account")</a></li>
                }
            </ul>
        </div>
        
                
        <section id="loginForm">
            <div class="box" id="nonCreateBox">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <h1>@Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })</h1>
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <h1>@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })</h1>
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </section>               
                   
    </header>
</body>
</html>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}  