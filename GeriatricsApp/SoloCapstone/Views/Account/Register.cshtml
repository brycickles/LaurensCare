@model SoloCapstone.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}


<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Laurens Care Geriatrics</title>
    <link rel="stylesheet" href="~/Content/Style.css" />
</head>
<body>
    <header>
        <div class="wrapper">
            <div class="logo">
                <a href="/Home/Index"><img src="~/Images/LaurensCare.png" alt="pathing issue" /></a>            </div>
            <ul class="nav-area">
                    <li><a>@Html.ActionLink("Register", "Register", "Account")</a></li>
                    <li><a>@Html.ActionLink("Login", "Login", "Account")</a></li>
                
            </ul>
        </div>

        <section id="registerForm">
            <div class="box" id="nonCreateBox">
                 @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                  {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <h1>@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })</h1>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    <h1>@Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })</h1>
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                    <h1>@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })</h1>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    <h1>@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })</h1>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    <input type="submit" class="btn btn-default" value="Register" />
                  }
           </div>
        </section>


    </header>
</body>
</html>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}






















