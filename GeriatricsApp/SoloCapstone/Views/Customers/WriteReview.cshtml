@model SoloCapstone.Models.Review

@{
    ViewBag.Title = "WriteReview";
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Laurens Care Geriatrics</title>
    <link rel="stylesheet" href="~/Content/Style.css" />
</head>
<body>
    <header>
        <div class="wrapper">
            <div class="logo">
                <img src="~/Images/LaurensCare.png" alt="pathing issue" />
            </div>
            <ul class="nav-area">
                <li>@Html.ActionLink("Home", "Index", "Home")</li>
                @if (User.IsInRole("Customer"))
                {
                    <li><a>@Html.ActionLink("Leave A Review", "WriteReview", "Customers")</a></li>
                    <li><a>@Html.ActionLink("Facilies", "FacilityReviews", "Customers")</a></li>
                    <li><a>@Html.ActionLink("Journal Entries", "CustomerJournals", "Customers")</a></li>
                }
                else if (User.IsInRole("Employee"))
                {
                    <li><a>@Html.ActionLink("Employee Home", "Index", "Employees")</a></li>
                    <li><a>@Html.ActionLink("Add Facility Review", "AddFacilityReview", "Employees")</a></li>
                }
                else
                {
                    <li><a>@Html.ActionLink("Register", "Register", "Account")</a></li>
                    <li><a>@Html.ActionLink("Login", "Login", "Account")</a></li>
                }
            </ul>
        </div>

        <section id="loginForm">
            <div class="box" id="nonCreateBox">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <h2>@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })</h2>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    <h2>@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })</h2>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    <h2>Leave A Review!</h2>
                    @Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    <input type="submit" value="Create" class="btn btn-default" />
                }
            </div>
        </section>

    </header>
</body>
</html>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}